apiVersion: apps/v1
kind: Deployment
metadata:
  name: mercury-node1
  namespace: {{ .Release.Namespace }}
  labels:
    app: mercury
    io.kompose.name: mercury-single-node
    io.kompose.service: mercury-node1
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mercury-node1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mercury-node1
    spec:
      hostname: mercury-node1
      imagePullSecrets:
        - name: "{{ .Values.image.pullSecret }}"
      containers:
        - name: mercury-node1
          image: "{{ .Values.image.registry }}mercury:{{ .Values.image.hgdbTag }}"
          env:
            - name: ACTIVEMQ_TCP_CONNECTION
              value: activemq:61616
            - name: EHCACHE_TERRACOTA_CONNECTION
              value: ehcache-node1:9410/clustered
            - name: HGDB_HA_GROUP
              value: single
            - name: HGDB_IS_CLUSTER
              value: "false"
            - name: HGDB_NODE
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: HGDB_NODE #Read the key
            - name: HGDB_ROLE
              value: MASTER
            - name: HGDB_URL_HOST
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: HGDB_URL_HOST #Read the key
            - name: HGDB_URL_PORT
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: HGDB_URL_PORT #Read the key
            - name: HGDB_URL_SCHEMA
              value: https
            - name: HOST_NAME
              value: mercury-node1
            - name: LDAP_CONNECTION
              value: ldap://openldap:389
            - name: LDAP_CONNECTION_NAME
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: LDAP_CONNECTION_NAME #Read the key
            - name: LDAP_CONNECTION_PASSWD
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: LDAP_TECHNICAL_USER_PASSWD #Read the key
            - name: LDAP_ROLES_DN
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: LDAP_ROLES_DN #Read the key
            - name: LDAP_USERS_DN
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: LDAP_USERS_DN #Read the key
            - name: POI_SERVER_NAME
              value: poi-server-node1
            - name: POSTGRESQL_CONNECTION
              value: postgres-db:5432
            - name: POSTGRESQL_PASSWD
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: HGDB_USER_PASSWORD #Read the key
            - name: POSTGRESQL_USER
              value: mercury
            - name: SECURITY_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: SECURITY_TOKEN #Read the key
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - name: mercurysinglenode-poi-server
              mountPath: /opt/mercury-3.0/poi-data
            - name: mercurysinglenode-mercury-upload
              mountPath: /opt/mercury-3.0/upload
            - name: mercurysinglenode-mercury-lucene
              mountPath: /opt/mercury-3.0/lucene
      restartPolicy: Always
      volumes:
        - name: mercurysinglenode-poi-server
          persistentVolumeClaim:
            claimName: mercurysinglenode-poi-server
        - name: mercurysinglenode-mercury-upload
          persistentVolumeClaim:
            claimName: mercurysinglenode-mercury-upload
        - name: mercurysinglenode-mercury-lucene
          persistentVolumeClaim:
            claimName: mercurysinglenode-mercury-lucene
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mercury-node1
  namespace: {{ .Release.Namespace }}
  labels:
    app: mercury
    io.kompose.name: mercury-single-node
    io.kompose.service: mercury-node1
spec:
  selector:
    io.kompose.service: mercury-node1
  ports:
    - name: "http"
      port: 8080
      targetPort: 8080
  type: NodePort
status:
  loadBalancer: {}
