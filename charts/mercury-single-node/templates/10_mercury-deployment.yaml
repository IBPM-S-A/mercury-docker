apiVersion: apps/v1
kind: Deployment
metadata:
  name: mercury
  namespace: {{ .Release.Namespace }}
  labels:
    app: loadbalancer-nginx
    io.kompose.name: mercury-single-node
    io.kompose.service: mercury
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mercury
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mercury
    spec:
      imagePullSecrets:
        - name: "{{ .Values.image.pullSecret }}"
      containers:
        - name: mercury
          image: "{{ .Values.image.registry }}mercury-lb:{{ .Values.image.mainTag }}"
          env:
            - name: CITY
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: CITY #Read the key
            - name: COUNTRY
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: COUNTRY #Read the key
            - name: DOMAIN_NAME
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: DOMAIN_NAME #Read the key
            - name: EMAIL
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: EMAIL #Read the key
            - name: HGDB_NODES
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: HGDB_NODES #Read the key
            - name: HTTPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: HGDB_URL_PORT #Read the key
            - name: ORG_NAME
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: ORG_NAME #Read the key
            - name: SERVER_NAME
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: SERVER_NAME #Read the key
            - name: STATE
              valueFrom:
                configMapKeyRef:
                  name: mercury-hgdb #Read from a configmap called oradb
                  key: STATE #Read the key
          ports:
            - containerPort: 80
            - containerPort: 443
          resources: {}
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
          volumeMounts:
            - name: mercurysinglenode-nginx-conf
              mountPath: /opt/nginx/conf
            - name: mercurysinglenode-nginx-html
              mountPath: /opt/nginx/html
            - name: mercurysinglenode-certificate-center
              mountPath: /opt/certificate_center
      restartPolicy: Always
      volumes:
        - name: mercurysinglenode-nginx-conf
          persistentVolumeClaim:
            claimName: mercurysinglenode-nginx-conf
        - name: mercurysinglenode-nginx-html
          persistentVolumeClaim:
            claimName: mercurysinglenode-nginx-html
        - name: mercurysinglenode-certificate-center
          persistentVolumeClaim:
            claimName: mercurysinglenode-certificate-center
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mercury
  namespace: {{ .Release.Namespace }}
  labels:
    app: loadbalancer-nginx
    io.kompose.name: mercury-single-node
    io.kompose.service: mercury
spec:
  selector:
    io.kompose.service: mercury
  ports:
    - name: "http"
      port: 80
      targetPort: 80
    - name: "https"
      nodePort: {{ .Values.url.port }}
      port: 443
      targetPort: 443
  type: NodePort
status:
  loadBalancer: {}
